import * as React from 'react'
import styled from 'styled-components'
import  {View, Text, TouchableOpacity, SafeAreaView, ScrollView} from 'react-native'
import {Header, Input, Button} from 'react-native-elements'
import { Heading, Page } from './components'
import { getToken, sendPushNotification, Token } from '../service/api'

const SummonButton = styled(TouchableOpacity)<{ color?: string }>`
    background-color: ${p => p.color || 'red'};
    flex: 48% 0 0;
    border-radius: 5px;
    text-align: center;
    margin-bottom: 10px;
    display: flex;
    height: 120px;
    align-items: center;
    justify-content: center;
    color: white;
`
const ButtonContainer = styled(View)`
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
`

const SummonButtonText = styled(Text)`
    color: white;
    font-size: 20px;
` 

const SummonScrollView = styled(ScrollView)`
    marginHorizontal: 10px;
`
/*const token = 'ExponentPushToken[zSYEXAFwZAxyy4ZWCSo5gG]' */

const ip12promax : React.FC = () => {
    const [tokenInput, setTokenInput] = React.useState('')
    const [token, setToken] = React.useState<Token | undefined>()

   return (
   <View>
       <Header centerComponent = {{ text: '12 PRO MAX  üíñ', style: { color: '#CAE5E8'} }} />
       <Page>
       <SummonScrollView>
            {token ? (<View>
                    <Heading>M√£ s·ªë m√°y b√™n kia l√† {token.id}. </Heading>
                        <Heading>üç± Xin m·ªùi ch·ªçn th·ª±c ƒë∆°n üç±</Heading>
                </View> 
                ) : (
                    <View>
                        <Input 
                           value = {tokenInput} 
                           onChangeText = {setTokenInput}
                           label = "M√£ s·ªë x√°c th·ª±c c·ªßa m√°y b√™n kia l√† g√¨?" 
                           placeholder = "Nh·∫≠p m√£ s·ªë v√†o ƒë√¢y n√® b·∫°n ∆°i!!!" />
                           <Button title = "X√°c nh·∫≠n" onPress = { async() => 
                           {
                               const storedToken = await getToken(tokenInput)
                               setToken(storedToken)
                           }} />
                    </View>
            )}

                {token && 
                    <View style={{ marginTop: 20 }}>
                    <Heading> H√¥m n√†y ƒÉn g√¨? </Heading>
                    <ButtonContainer>
        
                        <SummonButton color = "#b3e6ff" onPress = {() => sendPushNotification(token.token, 'üëã Tr∆∞a nay ƒÉn g√¨???', 'üçú H·ªß ti·∫øu nha!!!') }>
                            <SummonButtonText>üçú H·ªß ti·∫øu</SummonButtonText>
                        </SummonButton>
        
                        <SummonButton color = "#ccccff" onPress = {() => sendPushNotification(token.token, 'üëã Tr∆∞a nay ƒÉn g√¨???', 'üç≤ B√∫n b√≤ nghen!!!') }>
                            <SummonButtonText>üç≤ B√∫n b√≤</SummonButtonText>
                        </SummonButton>
        
                        <SummonButton color = "#90EE90" onPress = {() => sendPushNotification(token.token, 'üëã Tr∆∞a nay ƒÉn g√¨???', 'üçî Kebab cho c√≥ nhi·ªÅu s·ª± l·ª±a ch·ªçn!!!') }>
                            <SummonButtonText>üçî Kebab</SummonButtonText>
                        </SummonButton>
        
                        <SummonButton color = "#DDA0DD" onPress = {() => sendPushNotification(token.token, 'üëã Tr∆∞a nay ƒÉn g√¨???', 'ü•ñ B√°nh m√¨ cho l·∫π!!!') }>
                            <SummonButtonText>ü•ñ B√°nh m√¨</SummonButtonText>
                        </SummonButton>
        
                        <SummonButton color = "#ff99bb" onPress = {() => sendPushNotification(token.token, 'üëã Tr∆∞a nay ƒÉn g√¨???', 'üçõ C∆°m ƒëi cho no t·ªõi chi·ªÅu!!!') }>
                            <SummonButtonText>üçõ C∆°m t·∫•m</SummonButtonText>
                        </SummonButton>
        
                        <SummonButton color = "#F4A460" onPress = {() => sendPushNotification(token.token, 'üëã Tr∆∞a nay ƒÉn g√¨???', 'ü•ò B√∫n ri√™u c≈©ng ƒë∆∞·ª£c!!!') }>
                            <SummonButtonText>ü•ò B√∫n ri√™u</SummonButtonText>
                        </SummonButton>
                        
        
                    </ButtonContainer>
                    </View>
                }
                </SummonScrollView>
       </Page>
   </View> 
   )
}

export default ip12promax

function setPushNotification(token: string, arg1: string, arg2: string): void {
    throw new Error('Function not implemented.')
}
